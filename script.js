"use strict";!function(){function e(e,t,n){e.addEventListener("click",function(){l!==t&&(l+=n,a.style.transform="translateX(".concat(l,"%)"))})}var t,n,o,a,l;t="advantagesLeftBtn",n="advantagesRightBtn",o="advantagesList",t=document.getElementById(t),n=document.getElementById(n),a=document.getElementById(o),e(t,l=0,100),e(n,-100*(a.childElementCount-1),-100)}(),function(){var t=document.getElementById("form"),e=document.getElementById("submit");document.getElementById("tel");function n(e){return""!==e.trim()}function o(e){e.previousElementSibling.lastElementChild.textContent="Ошибка в заполнении"}function a(e){e.previousElementSibling.lastElementChild.textContent=""}e.addEventListener("click",function(e){e.preventDefault(),function(e){var t=!0;(n(e.elements.name.value)?a:(t=!1,o))(e.elements.name);(!function(e){return/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/.test(e)}(e.elements.email.value)?(t=!1,o):a)(e.elements.email);(!function(e){return/^(\+7|7|8)?[\s\-]?\(?[489][0-9]{2}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}$/.test(e)}(e.elements.tel.value)?(t=!1,o):a)(e.elements.tel);(n(e.elements.message.value)?a:(t=!1,o))(e.elements.message);return t}(t)&&alert("OK!")})}(),function(){var t=document.querySelector(".hamburger"),n=document.querySelector(".wrapper"),o=document.querySelector(".overlay"),a=document.getElementsByClassName("overlay__menu-link"),l=!1;t.addEventListener("click",function(){t.classList.toggle("hamburger--active"),o.classList.toggle("overlay--active"),(l=!l)?(n.style.height="100vh",n.style.overflow="hidden"):(n.style.height=null,n.style.overflow=null);for(var e=0;e<a.length;e++)a[e].addEventListener("click",function(){n.style.height=null,n.style.overflow=null,t.classList.remove("hamburger--active"),o.classList.remove("overlay--active"),l=!1})})}(),function(){var o;ymaps.ready(function(){o=new ymaps.Map("map",{center:[55.835502,37.509817],zoom:13,l:"sat"});for(var e=[[55.836701,37.510107]],t=new ymaps.GeoObjectCollection({},{draggable:!1,iconLayout:"default#image",iconImageHref:"../img/marker.svg",iconImageSize:[46,57],iconImageOffset:[-35,-52]}),n=0;n<e.length;n++)t.add(new ymaps.Placemark(e[n]));o.geoObjects.add(t)})}(),function(){var e=window.outerWidth;document.body.parentElement.style.fontSize="".concat(820<e?e/85.333:e/66.67,"px")}(),function(){var e=document.querySelector(".form"),t=document.getElementsByClassName("form__input"),n=document.getElementsByClassName("form__group"),o=document.querySelector(".form__textarea");var a=window.outerWidth,l=window.outerHeight;820<a?(e.style.width="".concat(.7*a,"px"),e.style.height="".concat(.7*l,"px")):(e.style.width="".concat(a,"px"),e.style.height="".concat(.9*l,"px"));for(var r=0;r<t.length;r++)t[r].style.height="".concat(.05*l,"px");for(var i=0;i<n.length;i++)for(var c=n[i].children,s=0;s<c.length;s++)c[s].style.width="".concat(7*a/c.length,"px");o.parentNode.style.width="100%",o.style.height="".concat(820<a?.2*l:420<a?.55*l:.5*l,"px")}(),function(){var e,t;e=document.querySelector(".intro__content"),t=window.outerWidth,e.style.width="".concat(t/2.276,"px")}(),function(){var r=document.getElementsByClassName("advantages__item"),i=document.getElementsByClassName("catalog__item");function c(e,t,n,o){var a=window.innerHeight,l=window.innerWidth,t=a*t,a=a/o;e.style.width="".concat(l*n,"px"),e.style.height="".concat(t,"px"),e.style.fontSize="".concat(a,"px")}for(var e,t=["load","resize"],n=0;n<t.length;n++)e=t[n],window.addEventListener(e,function(){if(820<window.outerWidth){for(var e=0;e<r.length;e++)c(r[e],.55,.2,30);for(var t=0;t<i.length;t++)c(i[t],.4,.28,30)}else if(420<window.outerWidth){for(var n=0;n<r.length;n++)c(r[n],.45,.4,40);for(var o=0;o<i.length;o++)c(i[o],.27,.45,65)}else{for(var a=0;a<r.length;a++)c(r[a],.33,.46,22.7);for(var l=0;l<i.length;l++)c(i[l],.27,.45,65)}})}(),function(){var e=document.querySelector(".overlay__menu"),t=window.outerWidth;e.style.fontSize="".concat(t/15,"px")}(),window.addEventListener("load",function(){document.body.parentElement.classList.add("loaded")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
